From: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
Date: Fri, 19 Oct 2018 12:46:53 +0200
Subject: [PATCH 12/22] x86/fpu: Only write PKRU if it is different from
 current

Dave Hansen says that the `wrpkru' is more expensive than `rdpkru'. It
has a higher cycle cost and it's also practically a (light) speculation
barrier.

As an optimisation read the current PKRU value and only write the new
one if it is different.

Signed-off-by: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
---
 arch/x86/include/asm/special_insns.h |    6 ++++++
 1 file changed, 6 insertions(+)

--- a/arch/x86/include/asm/special_insns.h
+++ b/arch/x86/include/asm/special_insns.h
@@ -112,6 +112,12 @@ static inline void __write_pkru(u32 pkru
 	u32 ecx = 0, edx = 0;
 
 	/*
+	 * WRPKRU is relatively expensive compared to RDPKRU.
+	 * Avoid WRPKRU when it would not change the value.
+	 */
+	if (pkru == __read_pkru())
+		return;
+	/*
 	 * "wrpkru" instruction.  Loads contents in EAX to PKRU,
 	 * requires that ecx = edx = 0.
 	 */
