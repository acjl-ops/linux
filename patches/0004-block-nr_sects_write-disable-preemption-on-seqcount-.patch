From: "Ahmed S. Darwish" <a.darwish@linutronix.de>
Date: Wed, 10 Jun 2020 12:53:02 +0200
Subject: [PATCH 04/24] block: nr_sects_write(): disable preemption on seqcount
 write

For optimized readers not holding a mutex, the hd_struct "number of
sectors" value is protected by a seqcount to avoid 64-bit values tearing
on 32-bit architectures.

Disable preemption before entering the seqcount write path. Otherwise, a
reader can preempt the write-side critical section and spin for the
entire tick. If that reader belongs to a real-time scheduling class, it
will loop forever and the kernel will livelock.

Fixes: c83f6bf98dc1 ("block: add partition resize function to blkpg ioctl")
Cc: <stable@vger.kernel.org>
Signed-off-by: Ahmed S. Darwish <a.darwish@linutronix.de>
Reviewed-by: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
Signed-off-by: Jens Axboe <axboe@kernel.dk>
(cherry-picked from axboe/linux-block.git commit 15b81ce5abdc4b502aa31dff2d415b79d2349d2f)
[a.darwish@linutronix.de: rebase v5.8-rc1 patch on top of v5.6]
Signed-off-by: Ahmed S. Darwish <a.darwish@linutronix.de>
Signed-off-by: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
---
 include/linux/genhd.h |    2 ++
 1 file changed, 2 insertions(+)

--- a/include/linux/genhd.h
+++ b/include/linux/genhd.h
@@ -752,9 +752,11 @@ static inline sector_t part_nr_sects_rea
 static inline void part_nr_sects_write(struct hd_struct *part, sector_t size)
 {
 #if BITS_PER_LONG==32 && defined(CONFIG_SMP)
+	preempt_disable();
 	write_seqcount_begin(&part->nr_sects_seq);
 	part->nr_sects = size;
 	write_seqcount_end(&part->nr_sects_seq);
+	preempt_enable();
 #elif BITS_PER_LONG==32 && defined(CONFIG_PREEMPTION)
 	preempt_disable();
 	part->nr_sects = size;
