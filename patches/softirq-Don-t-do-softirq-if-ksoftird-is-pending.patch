From: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
Date: Wed, 10 Jul 2019 12:32:04 +0200
Subject: [PATCH] softirq: Don't do softirq if ksoftird is pending

!RT does not invoke softirq on return from interrupt if ksoftirqd is
scheduled. This for instance for networking: once the budget is used,
napi will mark NET_RX pending and let ksoftird scheduled. This will
ensure that further napi processing happens in ksoftirqd and the system
can do something else.
In RT we had "shortcut" for this once budget is used to ensure that
further softirq handling happens in ksoftirqd. After the softirq rework
I dropped that shortcut assuming that we would gain mainline behaviour
here. The missing part piece is not to invoke softirqs if ksoftird is
pending.

Don't invoke softirqs on BH-enable if ksoftirqd is scheduled.

Signed-off-by: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
---
 kernel/softirq.c |    4 +---
 1 file changed, 1 insertion(+), 3 deletions(-)

--- a/kernel/softirq.c
+++ b/kernel/softirq.c
@@ -78,7 +78,6 @@ static void wakeup_softirqd(void)
 		wake_up_process(tsk);
 }
 
-#ifndef CONFIG_PREEMPT_RT_FULL
 /*
  * If ksoftirqd is scheduled, we do not want to process pending softirqs
  * right now. Let ksoftirqd handle this at its own rate, to get fairness,
@@ -93,7 +92,6 @@ static bool ksoftirqd_running(unsigned l
 		return false;
 	return tsk && (tsk->state == TASK_RUNNING);
 }
-#endif
 
 /*
  * preempt_count and SOFTIRQ_OFFSET usage:
@@ -173,7 +171,7 @@ void __local_bh_enable_ip(unsigned long
 
 	if (unlikely(count == 1)) {
 		pending = local_softirq_pending();
-		if (pending) {
+		if (pending && !ksoftirqd_running(pending)) {
 			if (!in_atomic())
 				__do_softirq();
 			else
