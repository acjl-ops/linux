From c99803103a8ae9017c5416a49af3c03aa7025acd Mon Sep 17 00:00:00 2001
From: Sangsup Lee <k1rh4.lee@gmail.com>
Date: Sun, 5 Feb 2023 21:43:26 -0800
Subject: [PATCH] fpga: dfl-afu-region: Add overflow checks for region size and
 offset

The size + offset is able to be integer overflow value and it lead to mis-allocate region.

Signed-off-by: Sangsup Lee <k1rh4.lee@gmail.com>
Reviewed-by: Russ Weight <russell.h.weight@intel.com>
---
 drivers/fpga/dfl-afu-region.c | 7 ++++++-
 1 file changed, 6 insertions(+), 1 deletion(-)

diff --git a/drivers/fpga/dfl-afu-region.c b/drivers/fpga/dfl-afu-region.c
index 0804b7a0c298..152b2f6a3907 100644
--- a/drivers/fpga/dfl-afu-region.c
+++ b/drivers/fpga/dfl-afu-region.c
@@ -150,12 +150,17 @@ int afu_mmio_region_get_by_offset(struct dfl_feature_platform_data *pdata,
 	struct dfl_afu_mmio_region *region;
 	struct dfl_afu *afu;
 	int ret = 0;
+	u64 region_size = 0;
 
 	mutex_lock(&pdata->lock);
+	if (check_add_overflow(offset, size, &region_size)) {
+		ret = -EINVAL;
+		goto exit;
+	}
 	afu = dfl_fpga_pdata_get_private(pdata);
 	for_each_region(region, afu)
 		if (region->offset <= offset &&
-		    region->offset + region->size >= offset + size) {
+		    region->offset + region->size >= region_size) {
 			*pregion = *region;
 			goto exit;
 		}
-- 
2.25.1

